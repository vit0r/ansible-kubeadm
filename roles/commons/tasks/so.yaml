- name: set new hostname
  hostname:
    name: "{{ ansible_ssh_host | replace('.','') }}"
    use: systemd

- name: update packages
  package:
    name: "*"
    state: latest
    update_cache: yes
    autoclean: yes

- name: install commons packages
  package:
    update_cache: yes
    state: present
    name: "{{ packages }}"
  vars:
    packages:
      - curl
      - wget
      - htop
      - python3-minimal
      - net-tools
      - build-essential
      - ca-certificates
      - vim
      - nfs-common
      - rsyslog
      - libvirt-clients
      - sudo
      - apt-transport-https
      - gpg
      - locales-all
      - qemu-guest-agent
      - socat
      - git
      - procps

- name: remove commons packages
  package:
    update_cache: yes
    state: absent
    name: "{{ packages }}"
  vars:
    packages:
      - iptables-persistent

- name: set-timezone America/Sao_Paulo
  shell: timedatectl set-timezone America/Sao_Paulo
  args:
    chdir: $HOME
    creates: timedatectl.log

- name: put k8s modules templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0760
  with_items:
    - {
        "src": "99-kubernetes-cri.conf.j2",
        "dest": "/etc/sysctl.d/99-kubernetes-cri.conf",
      }
    - {
        "src": "containerd.conf.j2",
        "dest": "/etc/modules-load.d/containerd.conf",
      }

- name: modprobes turn on
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: disable swapoff > swapoff.log
  shell: swapoff -a
  args:
    chdir: $HOME
    creates: swapoff.log

- name: sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { "name": "net.bridge.bridge-nf-call-ip6tables", "value": "0" }
    - { "name": "net.bridge.bridge-nf-call-iptables", "value": "1" }
    - { "name": "net.ipv4.ip_forward", "value": "1" }

- name: set the maximum number of open file handles in the system
  lineinfile:
    path: /etc/security/limits.conf
    line: "{{item}}"
    state: present
    create: yes
  with_items:
    - "* soft nofile 65536"
    - "* hard nofile 65536"

- name: close transparent large page
  shell: "{{item}}"
  args:
    chdir: $HOME
    creates: madvise.log
  with_items:
    - "echo madvise > /sys/kernel/mm/transparent_hugepage/enabled"
    - "echo madvise > /sys/kernel/mm/transparent_hugepage/defrag"

- name: enable and restart qemu-guest-agent
  systemd:
    daemon_reload: yes
    name: qemu-guest-agent
    state: restarted
    enabled: yes
